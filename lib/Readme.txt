Примечание:

1)Судя из названия, IPluginFactory должен реализовывать класс, 
который должен выступать в качестве создателя (фабрики) для новых плагинов, 
но в то же время по содержанию заявленных в ТЗ функций данного интерфейса, класс Plugins, 
который должен по ТЗ реализовать данный интерфейс - выступает в качестве
глобального контейнера для плагинов и не занимается их созданием (на это также косвено указывает и то, что по условию класс должен быть статическим,
а следовательно и являться "глобальной точкой" из любой части приложения), наименование интерфейса немного сбивает с толку. 
Поэтому для общего понимания в класс Plugins также добавил метод RegisterPlugin 
для добавления новых плагинов в контейер извне

2)По условию статический класс Plugins должен реализовать интерфейс IPluginFactory. Реализация интерфейсов статическими классами невозможна, если конечно не было задачи сделать его как Singleton, это не уточнялось. Сделал класс нестатическим

3)По заданному в ТЗ интерфейсу, IPlugin содержит поле типа Image из пространства System.Drawing, 
пришлось добавить данный тип из NuGet (System.Drawing.Common), поскольку поумолчанию Image не содержится 
в данном пространстве имен


Из проделанного:

1)Добавлены заявленные в ТЗ классы и пространство имен

2)Реализован IPlugin в базовом абстрактном классе PlaginBase

3)Добавлена реализация плагинов для сложения, деления и умножения

4)Добавлен в Plugins метод для добавления новых плагинов


